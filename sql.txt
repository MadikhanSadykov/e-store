-- Table: public.language

-- DROP TABLE IF EXISTS public.language;

CREATE TABLE IF NOT EXISTS public.language
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(60) COLLATE pg_catalog."default" NOT NULL,
    short_name character varying(30) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT language_pkey PRIMARY KEY (id),
    CONSTRAINT name UNIQUE (name),
    CONSTRAINT short_name UNIQUE (short_name)
)

-- TABLESPACE pg_default;

-- ALTER TABLE IF EXISTS public.language
--    OWNER to estore;


--------------------------------------------------------------------------------------------------------------------


-- Table: public.category

-- DROP TABLE IF EXISTS public.category;

CREATE TABLE IF NOT EXISTS public.category
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    name character varying(60) COLLATE pg_catalog."default" NOT NULL,
    url character varying(60) COLLATE pg_catalog."default" NOT NULL,
    product_count integer NOT NULL DEFAULT 0,
    id_language integer NOT NULL,
    CONSTRAINT id_pk PRIMARY KEY (id),
    CONSTRAINT name_u UNIQUE (name),
    CONSTRAINT url_u UNIQUE (url),
    CONSTRAINT id_language FOREIGN KEY (id_language)
        REFERENCES public.language (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

-- TABLESPACE pg_default;

-- ALTER TABLE IF EXISTS public.category
--    OWNER to estore;



----------------------------------------------------------------------------------------------------------------------


-- Table: public.producer

-- DROP TABLE IF EXISTS public.producer;

CREATE TABLE IF NOT EXISTS public.producer
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    name character varying(60) COLLATE pg_catalog."default" NOT NULL,
    product_count integer NOT NULL DEFAULT 0,
    CONSTRAINT id_pk1 PRIMARY KEY (id),
    CONSTRAINT name_u1 UNIQUE (name)
)

-- TABLESPACE pg_default;

-- ALTER TABLE IF EXISTS public.produdcer
--    OWNER to estore;


----------------------------------------------------------------------------------------------------------------------


-- Table: public.product

-- DROP TABLE IF EXISTS public.product;

CREATE TABLE IF NOT EXISTS public.product
(
    id bigint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default" NOT NULL,
    image_link character varying(255) COLLATE pg_catalog."default" NOT NULL,
    price numeric(2,0) NOT NULL,
    id_category integer NOT NULL,
    id_producer integer NOT NULL,
    id_language integer NOT NULL,
    CONSTRAINT product_pkey PRIMARY KEY (id),
    CONSTRAINT product_id_category_fkey FOREIGN KEY (id_category)
        REFERENCES public.category (id) MATCH SIMPLE
        ON UPDATE CASCADE
        ON DELETE RESTRICT,
    CONSTRAINT product_id_language_fkey FOREIGN KEY (id_language)
        REFERENCES public.language (id) MATCH SIMPLE
        ON UPDATE CASCADE
        ON DELETE RESTRICT,
    CONSTRAINT product_id_producer_fkey FOREIGN KEY (id_producer)
        REFERENCES public.producer (id) MATCH SIMPLE
        ON UPDATE CASCADE
        ON DELETE RESTRICT
)

-- TABLESPACE pg_default;

-- ALTER TABLE IF EXISTS public.product
--     OWNER to estore;


----------------------------------------------------------------------------------------------------------------------


-- Table: public.user

-- DROP TABLE IF EXISTS public."user";

CREATE TABLE IF NOT EXISTS public."user"
(
    id bigint NOT NULL,
    name character varying(60) COLLATE pg_catalog."default" NOT NULL,
    surname character varying(60) COLLATE pg_catalog."default" NOT NULL,
    email character varying(100) COLLATE pg_catalog."default" NOT NULL,
    phone_number character varying(20) COLLATE pg_catalog."default" NOT NULL,
    address text COLLATE pg_catalog."default" NOT NULL,
    password character varying(512) COLLATE pg_catalog."default" NOT NULL,
    is_admin boolean NOT NULL DEFAULT false,
    CONSTRAINT user_pkey PRIMARY KEY (id),
    CONSTRAINT user_email_key UNIQUE (email),
    CONSTRAINT user_phone_number_key UNIQUE (phone_number)
)

-- TABLESPACE pg_default;

-- ALTER TABLE IF EXISTS public."user"
--    OWNER to estore;


----------------------------------------------------------------------------------------------------------------------



-- Table: public.status

-- DROP TABLE IF EXISTS public.status;

CREATE TABLE IF NOT EXISTS public.status
(
    id integer NOT NULL,
    name character varying(60) COLLATE pg_catalog."default" NOT NULL,
    id_language integer NOT NULL,
    CONSTRAINT status_pkey PRIMARY KEY (id_language),
    CONSTRAINT status_name_key UNIQUE (name),
    CONSTRAINT status_id_language_fkey FOREIGN KEY (id_language)
        REFERENCES public.language (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

-- TABLESPACE pg_default;

-- ALTER TABLE IF EXISTS public.status
--    OWNER to estore;



----------------------------------------------------------------------------------------------------------------------




-- Table: public.order

-- DROP TABLE IF EXISTS public."order";

CREATE TABLE IF NOT EXISTS public."order"
(
    id bigint NOT NULL,
    total_cost numeric(2,0) NOT NULL,
    created timestamp without time zone NOT NULL DEFAULT now(),
    finished timestamp without time zone,
    id_user bigint NOT NULL,
    id_status integer NOT NULL,
    CONSTRAINT order_pkey PRIMARY KEY (id_user),
    CONSTRAINT order_id_status_fkey FOREIGN KEY (id_status)
        REFERENCES public.status (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT order_id_user_fkey FOREIGN KEY (id_user)
        REFERENCES public."user" (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

-- TABLESPACE pg_default;

-- ALTER TABLE IF EXISTS public."order"
--    OWNER to postgres;



----------------------------------------------------------------------------------------------------------------------




-- Table: public.order_item

-- DROP TABLE IF EXISTS public.order_item;

CREATE TABLE IF NOT EXISTS public.order_item
(
    id bigint NOT NULL,
    product_count integer NOT NULL,
    cost numeric(2,0) NOT NULL,
    id_order bigint NOT NULL,
    id_product bigint NOT NULL,
    CONSTRAINT order_item_pkey PRIMARY KEY (id_order),
    CONSTRAINT order_item_id_order_fkey FOREIGN KEY (id_order)
        REFERENCES public."order" (id) MATCH SIMPLE
        ON UPDATE CASCADE
        ON DELETE CASCADE,
    CONSTRAINT order_item_id_product_fkey FOREIGN KEY (id_product)
        REFERENCES public.product (id) MATCH SIMPLE
        ON UPDATE CASCADE
        ON DELETE RESTRICT
)

-- TABLESPACE pg_default;

-- ALTER TABLE IF EXISTS public.order_item
--    OWNER to estore;



----------------------------------------------------------------------------------------------------------------------




-- Table: public.cart

-- DROP TABLE IF EXISTS public.cart;

CREATE TABLE IF NOT EXISTS public.cart
(
    id bigint NOT NULL,
    product_count integer NOT NULL,
    id_user bigint NOT NULL,
    id_product bigint NOT NULL,
    CONSTRAINT cart_pkey PRIMARY KEY (id_user),
    CONSTRAINT cart_id_product_fkey FOREIGN KEY (id_product)
        REFERENCES public.product (id) MATCH SIMPLE
        ON UPDATE CASCADE
        ON DELETE RESTRICT,
    CONSTRAINT cart_id_user_fkey FOREIGN KEY (id_user)
        REFERENCES public."user" (id) MATCH SIMPLE
        ON UPDATE CASCADE
        ON DELETE RESTRICT
)

-- TABLESPACE pg_default;

-- ALTER TABLE IF EXISTS public.cart
--    OWNER to estore;





